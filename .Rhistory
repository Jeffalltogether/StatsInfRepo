t=(g1-g2)/(spsq*sqrt(1/n1 + 1/n2))
2*pt(t,n1+n2-2)
spsq <- sqrt((g1sd^2*8+g2sd^2*8)/(n1 + n2 -2))
g1 <- 1
g2 <- -3
g1sd <- 1.8
g2sd <- 1.5
n1 <- n2 <- 9
se <- sqrt((g1sd^2*8+g2sd^2*8)/(n1 + n2 -2))
mn + c(-1, 1) * qt(.95, n-1) * se
m4 <- mtcars$mpg[mtcars$cyl == 4]
m6 <- mtcars$mpg[mtcars$cyl == 6]
#this does 4 - 6
confint <- as.vector(t.test(m4, m6, var.equal = TRUE)$conf.int)
?t.test
n1 <- n2 <- 10
x1 <- 3  ##treated
x2 <- 5  ##placebo
s1 <- 0.6  ##treated
s2 <- 0.68  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
n1 <- n2 <- 10
x1 <- 3  ##treated
x2 <- 5  ##placebo
s1 <- 0.6  ##treated
s2 <- 0.68  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
mn + c(-1, 1) * qt(.95, n-1) * spsq/sqrt(n1)
n1 <- n2 <- 10
x1 <- 3  ##treated
x2 <- 5  ##placebo
s1 <- 0.6  ##treated
s2 <- 0.68  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
mn <- x2-x1
mn + c(-1, 1) * qt(.95, n-1) * spsq/sqrt(n1)
mn + c(-1, 1) * qt(.95, n-1) * spsq
mn + c(-1, 1) * qt(.975, n-1) * spsq
mn + c(-1, 1) * qt(.95, n-1) * spsq
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
mn <- x1-x2
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
mn <- x1-x2
mn + c(-1, 1) * qt(.95, n-1) * spsq
mn + c(-1, 1) * qt(.95, n-1) * spsq/sqrt(n1)
mn + c(-1, 1) * qt(.90, n-1) * spsq/sqrt(n1)
mn + c(-1, 1) * qnrom(.95, n-1) * spsq/sqrt(n1)
mn + c(-1, 1) * qnorm(.95, n-1) * spsq/sqrt(n1)
mn + c(-1, 1) * qt(.95, n-1) * spsq/sqrt(n1)
n1 <- n2 <- 10
x1 <- 3  ##treated
x2 <- 5  ##placebo
s1 <- 0.6  ##treated
s2 <- 0.68  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
mn <- x2-x1
mn + c(-1, 1) * qt(.95, n-1) * spsq/sqrt(n1)
mn + c(-1, 1) * qt(.975, n-1) * spsq/sqrt(n1)
n1 <- n2 <- 10
x1 <- 3  ##treated
x2 <- 5  ##placebo
s1 <- 0.6  ##treated
s2 <- 0.68  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
mn <- x1-x2
mn + c(-1, 1) * qt(.975, n-1) * spsq/sqrt(n1)
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
mn <- x1-x2
mn + c(-1, 1) * qt(.90, n-1) * spsq/sqrt(n1)
1100 + c(-1, 1) * qt(.975, 9-1) * sqrt((30^2/9))
n=9
mean=-2
SD=n*sqrt(mean/(-1*qt(0.975,n-1))
n=9
mean=-2
SD=n*sqrt(mean/(-1*qt(0.975,n-1)))
# => sd = ( ci_up - mua * sqrt(n) ) / qt(p, df)
ci_up = 0; mua = -2; n = 9; p = 0.975
( sd = ci_up - mua * sqrt(n) / qt(p, df=n-1))
quantile<- 0.975
# is 95% with 2.5% on both sides of the range
n_y <- 10 # nights new system
n_x <- 10 # nights old system
var_y <- 0.60 # variance new (sqrt of ??)
var_x <- 0.68 # variance old (sqrt of ??)
mean_y <- 3# average hours new system
mean_x <- 5# average hours old system
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qt(quantile, df=n_y+n_x-2) * mean_p * (1 / n_x + 1 / n_y)^.5
round(confidenceInterval,2)
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qt(quantile, df=n_y+n_x-2) * mean_p /sqrt(n_x + n_y)
round(confidenceInterval,2)
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qt(quantile, df=n_y+n_x-2) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
quantile<- 0.975
# is 95% with 2.5% on both sides of the range
n_y <- 100 # nights new system
n_x <- 100 # nights old system
var_y <- 0.50^2
var_x <- 2^2
mean_y <- 4# average hours new system
mean_x <- 6# average hours old system
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qnorm(quantile, df=n_y+n_x-2) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
?qnorm
quantile<- 0.975
# is 95% with 2.5% on both sides of the range
n_y <- 100 # nights new system
n_x <- 100 # nights old system
var_y <- 0.50^2
var_x <- 2^2
mean_y <- 4# average hours new system
mean_x <- 6# average hours old system
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qnorm(quantile) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
quantile<- 0.975
# is 95% with 2.5% on both sides of the range
n_y <- 100 # nights new system
n_x <- 100 # nights old system
var_y <- 0.50^2
var_x <- 2^2
mean_y <- 4# average hours new system
mean_x <- 6# average hours old system
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_x - mean_y + c(-1, 1) * qnorm(quantile) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
quantile<- 0.975
# is 95% with 2.5% on both sides of the range
n_y <- 9 # treatment
n_x <- 9 # control
var_y <- 1.5^2
var_x <- 1.8^2
mean_y <- -3
mean_x <- 1
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qnorm(quantile) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
quantile<- 0.95
# is 95% with 2.5% on both sides of the range
n_y <- 9 # treatment
n_x <- 9 # control
var_y <- 1.5^2
var_x <- 1.8^2
mean_y <- -3
mean_x <- 1
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qt(quantile, df=n_y+n_x-2) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
##Question 1
#Mean + c(-1, 1) * qt(.975, n-1) * sqrt((sd^2/n))
1100 + c(-1, 1) * qt(.975, 9-1) * sqrt((30^2/9))
##Question 2
#ci_up = mua + qt(p, df) * sd / sqrt(n)
# => ci_up = mua * sqrt(n) + qt(p, df) * sd
# => ci_up - mua * sqrt(n) = qt(p, df) * sd
# => sd = ( ci_up - mua * sqrt(n) ) / qt(p, df)
ci_up = 0; mua = -2; n = 9; p = 0.975
( sd = ci_up - mua * sqrt(n) / qt(p, df=n-1))
quantile<- 0.975
# is 95% with 2.5% on both sides of the range
n_y <- 10 # nights new system
n_x <- 10 # nights old system
var_y <- 0.60 # variance new (sqrt of ??)
var_x <- 0.68 # variance old (sqrt of ??)
mean_y <- 3# average hours new system
mean_x <- 5# average hours old system
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qt(quantile, df=n_y+n_x-2) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
##Question 6
quantile<- 0.975
# is 95% with 2.5% on both sides of the range
n_y <- 100 # nights new system
n_x <- 100 # nights old system
var_y <- 0.50^2
var_x <- 2^2
mean_y <- 4# average hours new system
mean_x <- 6# average hours old system
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_x - mean_y + c(-1, 1) * qnorm(quantile) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
##Question 7
quantile<- 0.95
# is 95% with 2.5% on both sides of the range
n_y <- 9 # treatment
n_x <- 9 # control
var_y <- 1.5^2
var_x <- 1.8^2
mean_y <- -3
mean_x <- 1
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * var_x + (n_y - 1) * var_y)/(n_x + n_y - 2))
confidenceInterval <- mean_y - mean_x + c(-1, 1) * qt(quantile, df=n_y+n_x-2) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
install.packages("e1071")
hist(runif(1000))
?runif
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
library(toothgrowth)
toothgrowth
ToothGrowth
TGdata <- ToothGrowth
ggplot(TGdata, aes(len~dose, colour=supp)) + geom_line()
library(ggplot2)
TGdata <- ToothGrowth
ggplot(TGdata, aes(len~dose, colour=supp)) + geom_line()
pairs(TGdata)
ggplot(TGdata, aes(len~dose)) + geom_line()
ggplot(TGdata, aes(len,dose)) + geom_line()
ggplot(TGdata, aes(len,dose)) + geom_point()
source("multiplot.m")
setwd("C:/Users/jeffthatcher/Cloud Drive/RRepos/StatisticalInference/StatsInfRepo")
source("multiplot.m")
source("multiplot.R")
p1 <- ggplot(TGdata, aes(len,supp)) + geom_point()
p2 <- ggplot(TGdata, aes(len,dose)) + geom_point()
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point()
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point()
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point()
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point()
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 4, alpha = 0.5, color="green") +
geom_smooth(method = "lm")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point()
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point()
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 4, alpha = 0.5, color="green") +
geom_smooth(method = "lm", group=1)
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point()
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point()
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, alpha = 0.5, color="green")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point()
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point()
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, alpha = 0.5, color="green")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, alpha = 0.5, color="skyblue")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3, alpha = 0.5, color="orange")
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, alpha = 0.9, color="green")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, alpha = 0.9, color="skyblue")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3, alpha = 0.9, color="orange")
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, alpha = 0.9, color="green")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, alpha = 0.9, color="skyblue")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3, alpha = 0.9, color="darkorange")
multiplot(p1,p2,p3,cols=3)
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color="skyblue") + geom_smooth(method = "lm")
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, color="green") + geom_smooth(method = "lm")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color="skyblue") + geom_smooth(method = "lm")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3,color="red") + geom_smooth(method = "lm")
multiplot(p1,p2,p3,cols=3)
?geom_smooth
p1 <- ggplot(TGdata, aes(len,supp)) + geom_point(size = 3, color="green") + geom_smooth(method = "lm")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color="skyblue") + geom_smooth(method = "lm")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3,color="red") + geom_smooth(method = "lm")
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, color="green")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color="skyblue") +
geom_smooth(method = "lm")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3,color="red")
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_line(size = 3, color="green")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color="skyblue") +
geom_smooth(method = "lm")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3,color="red")
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, color="forestgreen")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color="skyblue") +
geom_smooth(method = "lm")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3,color="red")
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, color="green", fill="black")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color="skyblue") +
geom_smooth(method = "lm")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3,color="red")
multiplot(p1,p2,p3,cols=3)
p1 <- ggplot(TGdata, aes(supp,len)) + geom_point(size = 3, color="black", fill="green")
p2 <- ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color="skyblue") +
geom_smooth(method = "lm")
p3 <- ggplot(TGdata, aes(supp,dose)) + geom_point(size = 3,color="red")
multiplot(p1,p2,p3,cols=3)
p4 <-ggplot(TGdata, aes(dose,len)) + geom_point(size = 3, color=supp) +
geom_smooth(method = "lm")
p4
p4 <-ggplot(TGdata, aes(x= dose,y= len, colour=supp)) + geom_point(size = 3, colour=c("green","purple")) +
geom_smooth(method = "lm")
p4
p4 <-ggplot(TGdata, aes(x= dose,y= len, colour=supp)) + geom_point(size = 3, colour=c("green","purple"))
p4
p4 <-ggplot(TGdata, aes(x= dose,y= len, colour=supp)) + geom_point(size = 3) +
geom_smooth(method = "lm")
p4
ToothGrowth
n_y <- length(ToothData$supp) # nights new system
n_y <- length(TGdata$supp) # nights new system
TGdata$supp=OJ
TGdata$supp = "OJ"
x <- TGdata$supp == "OJ"
sum(as.integer(TGdata$supp == "OJ"))
sum(TGdata$supp == "OJ")
sum(TGdata$supp == "O")
sum(TGdata$supp == "asdfa")
sum(TGdata$supp == "VC")
TGdata <- ToothGrowth
sum(TGdata$supp == "VC")
?sapply
aggregate(len, supp="OJ", mean)
?aggregate)
?aggregate
aggregate(TGdata, len, mean)
aggregate(TGdata, mean)
aggregate(TGdata, FUN=mean)
aggregate(TGdata, by=len,FUN=mean)
aggregate(TGdata, by=TGdata$len,FUN=mean)
state.x77
aggregate(TGdata, supp, mean)
aggregate(TGdata, by = list(supp), FUN= "mean")
aggregate(len~supp, data=TGdata, FUN= "mean")
aggregate(len~supp, data=TGdata, FUN= "mean")
aggregate(len~supp, data=TGdata, FUN= "var")
vars[,1]
vars <- aggregate(len~supp, data=TGdata, FUN= "var")
means <- aggregate(len~supp, data=TGdata, FUN= "mean")
vars[,1]
vars[,2]
vars[1,2]
vars
mean_p <- sqrt(((n_x - 1) * vars[2,2] + (n_y - 1) * vars[1,2])/(n_x + n_y - 2))
n_x <- sum(TGdata$supp == "VC") # number of VC datapoints
n_y <- sum(TGdata$supp == "OJ") # number of OJ datapoints
mean_p <- sqrt(((n_x - 1) * vars[2,2] + (n_y - 1) * vars[1,2])/(n_x + n_y - 2))
means
confidenceInterval <- means[1,2] - means[2,2] + c(-1, 1) * qt(quantile, df=n_y+n_x-2) * mean_p * sqrt(1/n_x + 1/n_y)
n_x <- sum(TGdata$supp == "VC") # number of VC datapoints
n_y <- sum(TGdata$supp == "OJ") # number of OJ datapoints
vars <- aggregate(len~supp, data=TGdata, FUN= "var")
means <- aggregate(len~supp, data=TGdata, FUN= "mean")
quantile = 0.975
# calculate pooled standard deviation
mean_p <- sqrt(((n_x - 1) * vars[2,2] + (n_y - 1) * vars[1,2])/(n_x + n_y - 2))
confidenceInterval <- means[1,2] - means[2,2] + c(-1, 1) * qt(quantile, df=n_y+n_x-2) * mean_p * sqrt(1/n_x + 1/n_y)
round(confidenceInterval,2)
means
TGdata[1:30,3]
TGdata[1:30,1]
?t.test
t.test(TGdata[1:30,1], TGdata[31:60,1], var.equal = TRUE)
sum(TGdata$dose == 0.5)
TGdata[1:20,]
TGdata[1:20 & 30:40,]
TGdata[1:20 && 30:40,]
TGdata[1:10 && 31:40,]
TGdata[1:10 & 31:40,]
rbind(TGdata[1:10,3], TGdata[31:40,3])
c(TGdata[1:10,3], TGdata[31:40,3])
c(TGdata[1:10,1], TGdata[31:40,1])
d1 <- c(TGdata[1:10,1], TGdata[31:40,1])
d2 <- c(TGdata[11:20,1], TGdata[41:50,1])
d3 <- c(TGdata[21:30,1], TGdata[51:60,1])
AvB <- t.test(d1, d2, var.equal = TRUE)
AvC <- t.test(d1, d3, var.equal = TRUE)
BvC <- t.test(d2, d3, var.equal = TRUE)
aVb
AvB
str(AvB)
AvB$p.value
results <- as.data.frame(c(AvB$p.value, AvC$p.value, BvC$p.value))
colnames(results) <- c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0")
colnames(results) <- c("d1 vs d2","d1 vs d3","d2 vs d3")
results <- as.data.frame(cbind(AvB$p.value, AvC$p.value, BvC$p.value))
colnames(results) <- c("d1 vs d2","d1 vs d3","d2 vs d3")
results <- as.data.frame(cbind(AvB$p.value, AvC$p.value, BvC$p.value))
colnames(results) <- c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0")
table(results)
results
results <- as.data.frame(cbind(round(AvB$p.value,2), round(AvC$p.value,2), round(BvC$p.value,2))
results <- as.data.frame(cbind(round(AvB$p.value,2), round(AvC$p.value,2), round(BvC$p.value,2)))
round(AvB$p.value,2)
round(AvB$p.value,3)
round(AvB$p.value,5)
?round
results <- as.data.frame(cbind(round(AvB$p.value,5), round(AvC$p.value,2), round(BvC$p.value,2)))
colnames(results) <- c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0")
results
round(results,3)
results <- as.data.frame(cbind(AvB$p.value, AvC$p.value, BvC$p.value))
colnames(results) <- c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0")
round(results,3)
d1 <- c(TGdata[1:10,1], TGdata[31:40,1])
d2 <- c(TGdata[11:20,1], TGdata[41:50,1])
d3 <- c(TGdata[21:30,1], TGdata[51:60,1])
AvB <- t.test(d1, d2, var.equal = TRUE)
AvC <- t.test(d1, d3, var.equal = TRUE)
BvC <- t.test(d2, d3, var.equal = TRUE)
results <- as.data.frame(cbind(AvB$p.value, AvC$p.value, BvC$p.value))
colnames(results) <- c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0")
round(results,3)
round(results,9)
AvB
d1 <- c(TGdata[1:10,1], TGdata[31:40,1])
d2 <- c(TGdata[11:20,1], TGdata[41:50,1])
d3 <- c(TGdata[21:30,1], TGdata[51:60,1])
AvB <- t.test(d1, d2, var.equal = TRUE)
AvC <- t.test(d1, d3, var.equal = TRUE)
BvC <- t.test(d2, d3, var.equal = TRUE)
results <- as.data.frame(cbind(AvB$p.value, AvC$p.value, BvC$p.value))
colnames(results) <- c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0")
round(results,10)
d1 <- c(TGdata[1:10,1], TGdata[31:40,1])
d2 <- c(TGdata[11:20,1], TGdata[41:50,1])
d3 <- c(TGdata[21:30,1], TGdata[51:60,1])
AvB <- t.test(d1, d2, var.equal = TRUE)
AvC <- t.test(d1, d3, var.equal = TRUE)
BvC <- t.test(d2, d3, var.equal = TRUE)
results <- as.data.frame(cbind(AvB$p.value, AvC$p.value, BvC$p.value))
colnames(results) <- c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0")
round(results,15)
library(ggplot2)
library(xtable)
options(xtable.floating = FALSE)
source("multiplot.R")
xtable(results)
results <- as.data.frame(rbind(AvB$p.value, AvC$p.value, BvC$p.value))
results <- cbind(results, c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0"))
results <- as.data.frame(rbind(AvB$p.value, AvC$p.value, BvC$p.value))
results <- cbind(c("0.5 vs. 1.0","0.5 vs. 2.0","1.0 vs. 2.0"),results)
colnames(results) <- c(comparison, P-Value)
colnames(results) <- c("comparison", "P-Value")
xtable(results)
round(results,15)
results
OJd1
OJd1 <- c(TGdata[1:10,1])
OJd2 <- c(TGdata[11:20,1])
OJd3 <- c(TGdata[21:30,1])
VCd1 <- c(TGdata[31:40,1])
VCd2 <- c(TGdata[41:50,1])
VCd3 <- c(TGdata[51:60,1])
OJd1
TGdata[1:10,]
TGdata[11:20,]
TGdata[21:30,]
TGdata[31:40,]
TGdata[41:50,]
TGdata[51:60,]
VCd1 <- c(TGdata[1:10,1])
VCd2 <- c(TGdata[11:20,1])
VCd3 <- c(TGdata[21:30,1])
OJd1 <- c(TGdata[31:40,1])
OJd2 <- c(TGdata[41:50,1])
OJd3 <- c(TGdata[51:60,1])
A1vB1 <- t.test(VCd1, OJd1, var.equal = TRUE)
A2vB2 <- t.test(VCd2, OJd2, var.equal = TRUE)
A3vB3 <- t.test(VCd3, OJd3, var.equal = TRUE)
results2 <- as.data.frame(cbind(A1vB1$p.value, A2vB2$p.value, A3vB3$p.value))
colnames(results2) <- c("Dose 0.5:  VC vs. OJ","Dose 1.0:  VC vs. OJ","Dose 2.0:  VC vs. OJ")
colnames(results2) <- c("Comparison of Dose", "P-Value")
results2
results2 <- as.data.frame(rbind(A1vB1$p.value, A2vB2$p.value, A3vB3$p.value))
colnames(results2) <- cbind(c("Dose 0.5:  VC vs. OJ","Dose 1.0:  VC vs. OJ",
"Dose 2.0:  VC vs. OJ"),results2)
colnames(results2) <- c("Comparison of Dose", "P-Value")
results2
A1vB1$p.value
A2vB2$p.value
A3vB3$p.value
results2 <- as.data.frame(rbind(A1vB1$p.value, A2vB2$p.value, A3vB3$p.value))
results2 <- cbind(c("Dose 0.5:  VC vs. OJ","Dose 1.0:  VC vs. OJ",
"Dose 2.0:  VC vs. OJ"),results2)
colnames(results2) <- c("Comparison of Dose", "P-Value")
results2
results2 <- as.data.frame(rbind(A1vB1$p.value, A2vB2$p.value, A3vB3$p.value))
results2 <- cbind(c("Dose 0.5:  VC vs. OJ","Dose 1.0:  VC vs. OJ",
"Dose 2.0:  VC vs. OJ"),results2)
colnames(results2) <- c("Comparison of Supp by Dose", "P-Value")
results2
round(results2,5)
results2 <- as.data.frame(rbind(A1vB1$p.value, A2vB2$p.value, A3vB3$p.value))
results2 <- cbind(c("Dose 0.5:  VC vs. OJ","Dose 1.0:  VC vs. OJ",
"Dose 2.0:  VC vs. OJ"),round(results2,5))
colnames(results2) <- c("Comparison of Supp by Dose", "P-Value")
results2
